Read-only operations of an AVL tree involve carrying out the same actions as would be carried out on an unbalanced binary search tree, but modifications have to observe and restore the height balance of the subtrees. Searching for a specific key in an AVL tree can be done the same way as that of a normal unbalanced binary search tree. Traversal Once a node has been found in an AVL tree, the next or previous node can be accessed in amortized constant time. When inserting an element into an AVL tree, you initially follow the same process as inserting into a Binary Search Tree. When deleting an element from an AVL tree, swap the desired element with the minimum element in the right subtree, or maximum element in the left subtree. 